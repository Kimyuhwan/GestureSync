angular.module('starter.controllers', [])

.controller('overallCtrl', function($scope, $state, $localstorage, $socket, $cordovaDialogs) {
    /* 진행상황 확인 페이지 */
    console.log('Start: Overall Ctrl');

    $scope.code = "";
    // socket functions
    $scope.socket = $socket.getSocket();
    $scope.socket.on('connect',function(){
        console.log('SocketOn: Successfully connected');
    });

    // 참여코드가 Valid 하다고 확인됨. 사용자의 ID를 받아옴
    $scope.socket.on('ValidCode', function(data) {
        console.log('SocketOn: ValidCode  ' + JSON.stringify(data));
        $localstorage.setID(data['id']);
        $localstorage.setIndex(data['index']);
        $state.go('introduction');
    });

    // 참여코드가 Invalid 하다고 확인됨.
    $scope.socket.on('InvalidCode', function() {
        console.log('SocketOn: InvalidCode');
        $cordovaDialogs.alert('입력하신 코드는 유효하지 않습니다. 진행자로부터 받은 코드를 입력해 주세요.', '유효하지 않은 코드입니다!', '확인').then(function() {});
    });

    // 사용자들의 참여 정보를 업데이트 하는 페이지
    $scope.socket.on('UpdateProgress', function(data) {
        console.log('SocketOn: Update Progress');
        $scope.progress = data;
    });

    $scope.socket.emit('UpdateOverall');



    // Local functions
    $scope.participate = function() {
        console.log('code : ' + $scope.code);
        if(typeof $scope.code === 'undefined') {
            $cordovaDialogs.alert('참여를 위해서는 반드시 코드를 입력해주셔야 합니다.', '코드를 입력해주세요!', '확인').then(function() {});
        } else {
            // In order to get user information, emit socket event with code data.
            $scope.socket.emit('CheckCode', $scope.code);
        }
    };



})

.controller('introductionCtrl', function($scope, $state) {
    /* 이벤트에 대한 설명 화면 */
    console.log('Start: introductionCtrl');

    $scope.goNext = function() {
        $state.go('overall', {}, {reload: true, inherit: true, notify: true});
    }

})

.controller('tutorialCtrl', function($scope, $state) {
    /* 제스처 세션 설명 화면 */
    console.log('Start: tutorialCtrl');

    $scope.goNext = function() {
        $state.go('gesture');
    }

})

.controller('gestureCtrl', function($scope, $mdDialog, $localstorage, $state){
    /* 제스처에 대한 설명을 하고 각 제스처를 트레이닝 할 수 있는 화면 */
    console.log('Start: Gesture Ctrl');

    // show dialog
    $scope.showTrainDialog = function(gesture) {
        console.log('Function: showTrainDialog for ' + gesture);

        // gesture_가 붙은 것은 gesture template
        $scope.gesture_name = gesture;

        $mdDialog.show({
          controller: trainController,
          templateUrl: 'templates/_train.html',
          parent: angular.element(document.body),
          clickOutsideToClose:true,
          scope: $scope,
          preserveScope: true
        })
        .then(function(answer) {
          console.log(answer);
        }, function() {
          console.log('cancelled');
        });

    };

    function trainController($scope, $mdDialog, $interval, $cordovaDeviceMotion, $analyzer, $cordovaNativeAudio) {
        /* 제스처를 트레이닝하는 다이얼로그 */
        console.log('Start: Train Controller');

        // variables
        $scope.testing = false;

        // setting information
        var train_information = {
            ship: {train_title: '배모양', train_image_path: 'img/cruise.png', train_subone_title: '왼방향', train_subtwo_title: '오른방향', train_subone_name: 'Left', train_subtwo_name: 'Right', guide_image_path: 'img/ship.gif'},
            hug: {train_title: '포옹', train_image_path: 'img/hug.png', train_subone_title: '앞방향', train_subtwo_title: '뒷방향', train_subone_name: 'Forward', train_subtwo_name: 'Backward', guide_image_path: 'img/hug.gif'},
            fist: {train_title: '다짐', train_image_path: 'img/fist.png', train_subone_title: '윗방향', train_subtwo_title: '아랫방향', train_subone_name: 'Up', train_subtwo_name: 'Down', guide_image_path: 'img/fist.gif'}
        };
        $scope.train_data = train_information[$scope.gesture_name];

        // training functions
        var stop = undefined;

        // set template
        if($scope.gesture_name === 'ship') {
            $scope.subgesture_one_template = [[-0.6068369703475742,-0.026042504840060234,0.794399571601743],[-0.6978317471866703,-0.15193026698203813,0.6999628894399802],[-0.8034888222270327,-0.14380513040208873,0.5776900527326518],[-0.7663456763546797,-0.13054477869100956,0.6290249320090611],[-0.7131226054139602,-0.16445821854621398,0.6814760773499028],[-0.7021110768776593,-0.18168081203645542,0.6884999043307615],[-0.8006373540999006,-0.1412968621516986,0.5822499669093975],[-0.8631827069389153,-0.1760371797758926,0.4732087549677804],[-0.8522889107446966,-0.16653483264809688,0.49585256088527857],[-0.7902285225706821,-0.14763151519068352,0.5947636655330083],[-0.9276333847643,-0.16519995833344922,0.3349705617473794],[-0.9770015011021141,-0.20004389545246914,-0.07382754727347393],[-0.8530812499906828,-0.5140950619777452,-0.0892112558169215],[-0.853081249990683,-0.5140950619777452,-0.08921125581692184],[-0.4401928494454764,-0.27869260579585586,-0.8535576645849933],[0.14764950788253683,0.1406549743716198,-0.978987130153693],[0.2085538154802504,0.17198949285510542,-0.9627694014643763],[0.2266394558609215,-0.20437883004993065,-0.9522939939296514],[0.3347472418715192,-0.09246345827122805,-0.9377605200390638],[0.5815672791118558,-0.02132797163163272,-0.8132186775354543],[0.39805356203351977,0.0921329162386713,-0.9127238834925845],[0.30942520563121767,0.03340271701861081,-0.9503369405720549],[0.11380773174350245,0.1454842214085288,-0.9827930308648679],[-0.1299472470974302,0.3307159287708456,-0.9347409734407904],[-0.19508889953285388,0.41784314683339957,-0.8873259975473625],[-0.5188728085891828,0.5613327060682187,-0.6447298671574818],[-0.7300733889083715,0.5231773878753245,-0.4396342430063859],[-0.8283263121942988,0.523564548684078,-0.19938827419843597],[-0.8551856850577382,0.5024137820466691,-0.1274277665263301]];
            $scope.subgesture_two_template = [[0.9546596674237967,-0.21284703116082745,0.20813711999618764],[0.9546596674237967,-0.21284703116082737,0.2081371199961875],[0.7089696562883249,-0.22789965004984652,0.667400761139491],[0.577486159012473,-0.2708171878346097,0.7701738679820124],[0.46825427168390693,-0.22047104655434865,0.8556462205146496],[0.3706255886433184,-0.2142002983813377,0.9037449337153375],[0.34431234299509367,-0.20570089409114894,0.9160437503915034],[0.2919813442522003,-0.19987562425228408,0.9353056342385829],[0.19899887313279002,-0.1906802441550231,0.9612702497117346],[0.19664640493708466,-0.18971316234417587,0.9619454805022437],[0.23515817958232194,-0.20192910727103533,0.950749844182081],[0.22325660323814628,-0.19025571061111565,0.9560121618946196],[0.11910852568039913,-0.2253510298805098,0.9669695302552378],[-0.235800950260811,-0.30844808216942815,0.9215517850137888],[0.2283315255234926,0.1407644994099562,0.9633535540796945],[0.1371236710160038,0.5010553086370871,-0.8544826952804182],[0.16741028126390317,0.29508498174717523,-0.9406905183291739],[0.27274043488740135,0.30300310269256375,-0.9131274691608565],[0.22478011235865664,0.32146722379672144,-0.9198547304397897],[0.19491113494356999,0.2777839363873172,-0.9406623911692104],[0.17541343789967473,0.21768577516606014,-0.9601265693097804],[0.1599320510769151,0.17316006417533503,-0.9718216560733377],[0.20399714607855648,0.17091304373324084,-0.9639366659037529],[0.23074324003612776,0.1092581515134532,-0.9668610104381568],[0.29814178979871725,0.1856639935712694,-0.9362907425937657],[0.45667516438519373,0.25743199290449864,-0.8515729935025972],[0.533683258114526,0.2400695267130798,-0.8108938292723789],[0.5709459512703886,0.24485636993410465,-0.783623684449777],[0.7433975912460832,0.3306924234667637,-0.5813798606687371],[0.8110065464177658,0.3185989225680866,-0.49067617448372475],[0.7827003087448844,0.2813275753933577,-0.555189176780273]];
        } else if($scope.gesture_name === 'hug') {
            $scope.subgesture_one_template = [[0.3614994289168437,-0.11562319945595666,0.9251753556166332],[0.3614994289168437,-0.11562319945595667,0.9251753556166332],[0.2814234180777454,-0.9429100071343607,0.17810552547104933],[0.2814234180777453,-0.9429100071343605,0.17810552547105005],[-0.15386594166140874,-0.3476691648605602,-0.9249061702690757],[-0.06141576353081328,-0.23546910624637368,-0.9699393816076659],[0.04114212551286626,-0.026009851479544415,-0.9988147041039671],[0.10537358100600606,0.050471769857990983,-0.9931510503812462],[0.08586126358079184,0.1011566033829671,-0.9911585065005147],[0.03406161036459144,0.14629051518876762,-0.988655092469146],[0.03495877668723525,0.19585002978350458,-0.9800105355384361],[0.14922792943562754,0.22886835250498697,-0.9619512993379697],[0.12213904378645896,0.2916397200107564,-0.9486982279391993],[0.17506757483576765,0.3359315034414438,-0.9254735918634817],[0.18163013249975427,0.3996962051950704,-0.8984728368296852],[0.22522131944500715,0.4961125783815316,-0.8385390073449647],[0.47195313699814867,0.582139774920166,-0.6620978167412314],[0.5378090913653463,0.6090246428179815,-0.5829668649976691],[0.5182803139617844,0.5759775873588723,-0.6321671733172538],[0.4644747011462685,0.579074797051797,-0.6700265900802034],[0.38297053694139316,0.538844981890307,-0.7503197007452596],[0.13689551115942117,0.5429775200760261,-0.8285137486586989],[-0.6062494415607816,0.6289640729702333,-0.48668861659169255],[-0.9430359374748509,0.22682648983475875,0.24337823267533856],[-0.7887203537001886,0.03039044917299406,0.6140005083533019],[-0.6980813489244365,-0.03424581601947127,0.7151990312975819],[-0.7526604820445638,0.025811536821635943,0.6579027005077195],[-0.8037379926475021,0.3561985971476775,0.47657926787155824],[-0.5441356553664479,0.8034634677624714,0.24158403202618764],[-0.21445724990059006,0.9638392167129852,0.15818360310466678],[0.24988734441827914,0.7901979827570986,0.559592229347578],[0.33916907920357575,0.5805918478210471,0.7401874370427673]];
            $scope.subgesture_two_template = [[0.8019088147509726,0.2580456701626595,-0.5388456967769106],[0.7636204348737974,0.14235134605659067,-0.6297776795973554],[0.4744608412758748,-0.2470619360300003,-0.844894851363705],[0.0825917746435451,-0.587418137312219,-0.8050580915175456],[-0.2072055620151687,-0.846791852259508,-0.48990755660317137],[-0.4545247720749976,-0.8882466077614747,-0.0665221419559255],[-0.43380558382950396,-0.8901971446947959,0.13914653792163045],[-0.43351876314235505,-0.8889165488590427,0.14794881266185303],[-0.4737121243982762,-0.8706981862769402,0.13221759191619928],[-0.5465317635131263,-0.7947065385332206,0.2640919330153403],[-0.52249502782717,-0.7919693345222668,0.3158852941690111],[-0.5213502066514342,-0.761203466992028,0.385698384575076],[-0.2828206024272194,-0.7833471046152962,0.5535158719797806],[-0.09564667412627587,-0.6229030564946518,0.776429968469921],[-0.20489812124608212,-0.4773793226657421,0.8544739564205706],[-0.23479542130375256,-0.4010597058113059,0.885450293641231],[-0.28298931340964617,-0.20169268637203172,0.9376764414018145],[-0.308949742847334,-0.062427305508880156,0.9490273378156538],[-0.3090282656379004,0.38866666890666196,0.8680090734075483],[-0.3090282656379004,0.3886666689066619,0.8680090734075482],[-0.30902826563790037,0.38866666890666196,0.8680090734075482],[0.36543100149024743,0.9016542463550141,0.23125700676910615],[0.5802789347421251,0.814389432782201,0.006797769283348187],[0.6982816486932206,0.46929096904255835,-0.5405263411466402],[0.5353021708358617,0.05896780173885933,-0.8425997770332606],[0.3907104036508008,-0.10147190539585707,-0.9149037287574919],[0.32656871805121,-0.06129036626932313,-0.9431841619710126],[0.3451131631101148,-0.0006229747354366177,-0.9385608752503006],[0.288889188139446,0.008126835365584024,-0.957328048018584],[0.25174687493677894,0.07232093384829405,-0.965087142949732],[0.5326147727738333,0.22850681831983874,-0.8149270751450232],[0.6249462248145862,0.5669865285793944,-0.5366269584166307],[0.807553963277094,0.19437269452803438,0.5568445492391656]];
        } else if($scope.gesture_name === 'fist') {
            $scope.subgesture_one_template = [[0.3931954656332231,-0.6894349094426494,-0.6083394048122139],[0.4421543443366109,-0.8203402357343829,-0.36268641195875956],[0.3015707785184035,-0.9413774082642385,0.15120727744890203],[0.2616387577142776,-0.9591120543407331,0.10793158796213433],[0.2913952789933124,-0.9158201732607844,0.276337115909167],[0.2913952789933126,-0.9158201732607844,0.27633711590916693],[0.41122908851622636,-0.7580156330902431,0.5062637027764402],[0.45744602928895145,-0.841720000256749,0.2867936042793671],[0.42436185743193716,-0.9009856693809205,0.09023213134538498],[0.3288347995369369,-0.9409570732127893,-0.08042052588937748],[0.2974460304623019,-0.9526419763239945,-0.06323862670657082],[0.19078539845979275,-0.8784843326719075,0.43802535198836545],[0.13683398345831746,-0.7916417556448282,0.595466028997879],[0.19507615628653932,-0.73413850579283,0.6503736983925015],[0.311796363800432,-0.7116421709557034,0.6295621081658919],[0.7239315672979126,-0.310841013853032,0.6158741348493272],[0.904534074386287,0.08576135962252864,0.4176877990435421],[0.7872099057644818,0.5407399980548087,0.296480722425525],[0.7272032213367952,0.5934877507711737,0.3448880464179087],[0.6102149730657696,0.7329061964231376,-0.3008092317248776],[0.3345047838450289,0.5682310854629098,-0.7518111352583396],[0.03829506962732256,0.48829712220081406,-0.8718368012951976],[-0.5096789930217579,0.19024102899255158,-0.8390683374792436],[-0.638285620371274,-0.08228352620950699,-0.7653893702827256],[-0.576352521716996,-0.15462602972791853,-0.802439132670535],[-0.6894195816489029,0.057836552295011494,-0.7220495645436524],[-0.6078932945112059,0.06610525457967889,-0.7912621801939406],[-0.4393909490615608,0.034499867440032396,-0.8976331951467711],[-0.4011899454284438,0.22571552018396782,-0.8877494757166591]];
            $scope.subgesture_two_template = [[0.5016632143414363,-0.35683171276110914,0.7880387986289705],[0.5143110183323178,-0.4525432829004476,0.7284838732076777],[0.4143121426536822,-0.6396146313944675,0.6474863487022985],[0.20060543839287479,-0.7647999781589362,0.6122405176850788],[0.020712307965896414,-0.8553224045316917,0.517681933821194],[-0.05548153361697582,-0.9723095611164896,0.22701523470676513],[-0.8318886879388758,-0.2598046663283034,-0.4903700095166656],[-0.6626649031583332,0.29937332173273157,-0.6864771229668671],[-0.5644889275061177,0.6350628708747854,-0.5273020014747419],[-0.5597059622425012,0.7212159520432299,-0.40813819516013605],[-0.5213870676090696,0.7530338440014036,-0.4013671081671804],[-0.42951505541001667,0.7774736754765836,-0.45940341870415163],[-0.40151036435307697,0.8143840276626778,-0.41900845194933034],[-0.4765613749379,0.8126373356246014,-0.33542483012777563],[-0.442015621354421,0.8674535436749564,-0.22835616927165667],[-0.35522910525971574,0.9095530134937787,-0.2156979332788516],[-0.24149187228049018,0.932912167689308,-0.2671264925081376],[-0.2814136842971468,0.9529088133601962,-0.11300943195489568],[-0.3499127236889651,0.9364910574891185,0.023357761953630856],[-0.3196980513469772,0.9344492116822967,0.1568369431966841],[-0.19871721927702266,0.9393180414835183,0.2796302625009947],[-0.3238790741390571,0.7039138125677367,0.6321453075133757],[-0.5077755168575743,0.5927137477374171,0.6251835232338492],[-0.4620929308115145,0.6752361276011358,0.5749141633985437],[-0.3400262240487626,0.7515170086612928,0.5653356106348892],[-0.134022931818962,0.7196642992563833,0.6812643760849885],[-0.022262150732644963,0.6876660061232391,0.7256857864580719],[-0.31590575259962556,0.692012963773135,0.6490929158790641]];
        }

        // testing functions
        $scope.train_test_start = function() {
            if ( angular.isDefined(stop) ) return;

            $scope.testing = true;
            // initialize raw mode
            $scope.collection_features = [];
            $scope.collection_feature_magnitudes = [];
            $scope.analysis_index = 0;
            $scope.recognition_state = "non";
            $scope.pre_gesturestate = "non";

            $scope.current_state = "Non";

            // get templates from local storage
            var one_template = $scope.subgesture_one_template;
            var two_template = $scope.subgesture_two_template;
            var frame_size = Math.min(one_template.length, two_template.length); // 이거 어떻게 정해야하는지 고민되는 구만
            console.log('A Length of one template : ' + one_template.length);
            console.log('A Length of two template : : ' + two_template.length);

            $scope.left_distance = 0;
            $scope.right_distance = 0;

            // start collecting
            var gravity = [0, 0, 0];
            stop = $interval(function() {
              // get accelerometer data
              $cordovaDeviceMotion.getCurrentAcceleration().then(function (result) {

                    $scope.analysis_index++;

                    // calculate similarity
                    if ($scope.collection_features.length > frame_size) {
                        $scope.collection_features.shift();
                        $scope.collection_feature_magnitudes.shift();

                        // calculate average magnitude
                        var sum = 0;
                        for (var i = $scope.collection_feature_magnitudes.length - 5; i < $scope.collection_feature_magnitudes.length; i++)
                            sum += $scope.collection_feature_magnitudes[i];
                        $scope.avg_magnitude = sum / $scope.collection_feature_magnitudes.length;

                        if ($scope.analysis_index % 2 == 0 && $scope.avg_magnitude > 0.2) {

                            // get similarity
                            if ($scope.pre_gesturestate !== 'One') {
                                // Right or None
                                var left_distance = $analyzer.getSimilarity(one_template, $scope.collection_features);
                                if (left_distance < 17) {
                                    console.log('One Gesture ' + left_distance);
                                    $scope.recognition_state = "One";
                                    $scope.pre_gesturestate = "One";
                                    $cordovaNativeAudio.play('effect_one');
                                }
                            } else if ($scope.pre_gesturestate !== 'Two') {
                                var right_distance = $analyzer.getSimilarity(two_template, $scope.collection_features);
                                if (right_distance < 17) {
                                    console.log('Two Gesture ' + right_distance);
                                    $scope.recognition_state = "Two";
                                    $scope.pre_gesturestate = "Two";
                                    $cordovaNativeAudio.play('effect_two');
                                }
                            }
                        }
                    }

                    // remove gravity
                    var alpha = 0.8;
                    gravity[0] = alpha * gravity[0] + (1 - alpha) * result.x;
                    gravity[1] = alpha * gravity[1] + (1 - alpha) * result.y;
                    gravity[2] = alpha * gravity[2] + (1 - alpha) * result.z;

                    // normalize and make collection_features
                    var frame_feature = [];
                    var magnitude = Math.sqrt((result.x - gravity[0]) * (result.x - gravity[0]) + (result.y - gravity[1]) * (result.y - gravity[1]) + (result.z - gravity[2]) * (result.z - gravity[2]));
                    frame_feature.push((result.x - gravity[0]) / magnitude);
                    frame_feature.push((result.y - gravity[1]) / magnitude);
                    frame_feature.push((result.z - gravity[2]) / magnitude);
                    $scope.collection_features.push(frame_feature);
                    $scope.collection_feature_magnitudes.push(magnitude);

                }, function (err) {
                });


            }, 25);
        };

        $scope.train_stop = function() {
            // stop collection
            console.log('Function: train_stop');
            if (angular.isDefined(stop)) {
              $scope.testing = false;
              $interval.cancel(stop);
              stop = undefined;
            }
        };

        // dialog functions
        $scope.answer = function(answer) {
            if($scope.testing === false) {
                $mdDialog.hide(answer);
            }
        };

    }

    $scope.ImReady = function() {
        console.log('Function: ImReady');
        $state.go('game');

    };
})


.controller('gameCtrl', function($scope, $cordovaNativeAudio, $interval, $cordovaDeviceMotion, $localstorage, $analyzer, $cordovaVibration, $socket, $state) {
    console.log('Start: Game Controller');

    var my_name = $localstorage.getID();
    $scope.vibration = false;
    $scope.start = false;
    $scope.gestureSession = true;

    // [Socket] Init
    $scope.socket = $socket.getSocket();

    // [Socket] Login
    $scope.socket.emit('Login', my_name);

    // [Socket] On Start
    $scope.socket.on('Start', function(data) {
        console.log('SocketOn: Start Game at ' + data);
        var start_timer = setInterval(function(){
          var current_timestamp = new Date().getTime();
          if(current_timestamp >= data) {
              clearInterval(start_timer);
              $scope.playGame();
          }
        },10);
    });

    // [Socket] Vibration
    $scope.socket.on('Vibration', function() {
        console.log('SocketOn: Vibration');
        $scope.vibration = true;
    });

    // [Game] Start
    $scope.playGame = function() {
        // start background music
        $cordovaNativeAudio.loop('music');
        $cordovaNativeAudio.setVolumeForComplexAsset('music', 0.1);
        $cordovaNativeAudio.loop('beat');

        $scope.start = true;
        $scope.cut_length = 5;
        // get templates from local storage
        var left_template = [[-0.6068369703475742,-0.026042504840060234,0.794399571601743],[-0.6978317471866703,-0.15193026698203813,0.6999628894399802],[-0.8034888222270327,-0.14380513040208873,0.5776900527326518],[-0.7663456763546797,-0.13054477869100956,0.6290249320090611],[-0.7131226054139602,-0.16445821854621398,0.6814760773499028],[-0.7021110768776593,-0.18168081203645542,0.6884999043307615],[-0.8006373540999006,-0.1412968621516986,0.5822499669093975],[-0.8631827069389153,-0.1760371797758926,0.4732087549677804],[-0.8522889107446966,-0.16653483264809688,0.49585256088527857],[-0.7902285225706821,-0.14763151519068352,0.5947636655330083],[-0.9276333847643,-0.16519995833344922,0.3349705617473794],[-0.9770015011021141,-0.20004389545246914,-0.07382754727347393],[-0.8530812499906828,-0.5140950619777452,-0.0892112558169215],[-0.853081249990683,-0.5140950619777452,-0.08921125581692184],[-0.4401928494454764,-0.27869260579585586,-0.8535576645849933],[0.14764950788253683,0.1406549743716198,-0.978987130153693],[0.2085538154802504,0.17198949285510542,-0.9627694014643763],[0.2266394558609215,-0.20437883004993065,-0.9522939939296514],[0.3347472418715192,-0.09246345827122805,-0.9377605200390638],[0.5815672791118558,-0.02132797163163272,-0.8132186775354543],[0.39805356203351977,0.0921329162386713,-0.9127238834925845],[0.30942520563121767,0.03340271701861081,-0.9503369405720549],[0.11380773174350245,0.1454842214085288,-0.9827930308648679],[-0.1299472470974302,0.3307159287708456,-0.9347409734407904],[-0.19508889953285388,0.41784314683339957,-0.8873259975473625],[-0.5188728085891828,0.5613327060682187,-0.6447298671574818],[-0.7300733889083715,0.5231773878753245,-0.4396342430063859],[-0.8283263121942988,0.523564548684078,-0.19938827419843597],[-0.8551856850577382,0.5024137820466691,-0.1274277665263301]];
        var right_template = [[0.9546596674237967,-0.21284703116082745,0.20813711999618764],[0.9546596674237967,-0.21284703116082737,0.2081371199961875],[0.7089696562883249,-0.22789965004984652,0.667400761139491],[0.577486159012473,-0.2708171878346097,0.7701738679820124],[0.46825427168390693,-0.22047104655434865,0.8556462205146496],[0.3706255886433184,-0.2142002983813377,0.9037449337153375],[0.34431234299509367,-0.20570089409114894,0.9160437503915034],[0.2919813442522003,-0.19987562425228408,0.9353056342385829],[0.19899887313279002,-0.1906802441550231,0.9612702497117346],[0.19664640493708466,-0.18971316234417587,0.9619454805022437],[0.23515817958232194,-0.20192910727103533,0.950749844182081],[0.22325660323814628,-0.19025571061111565,0.9560121618946196],[0.11910852568039913,-0.2253510298805098,0.9669695302552378],[-0.235800950260811,-0.30844808216942815,0.9215517850137888],[0.2283315255234926,0.1407644994099562,0.9633535540796945],[0.1371236710160038,0.5010553086370871,-0.8544826952804182],[0.16741028126390317,0.29508498174717523,-0.9406905183291739],[0.27274043488740135,0.30300310269256375,-0.9131274691608565],[0.22478011235865664,0.32146722379672144,-0.9198547304397897],[0.19491113494356999,0.2777839363873172,-0.9406623911692104],[0.17541343789967473,0.21768577516606014,-0.9601265693097804],[0.1599320510769151,0.17316006417533503,-0.9718216560733377],[0.20399714607855648,0.17091304373324084,-0.9639366659037529],[0.23074324003612776,0.1092581515134532,-0.9668610104381568],[0.29814178979871725,0.1856639935712694,-0.9362907425937657],[0.45667516438519373,0.25743199290449864,-0.8515729935025972],[0.533683258114526,0.2400695267130798,-0.8108938292723789],[0.5709459512703886,0.24485636993410465,-0.783623684449777],[0.7433975912460832,0.3306924234667637,-0.5813798606687371],[0.8110065464177658,0.3185989225680866,-0.49067617448372475],[0.7827003087448844,0.2813275753933577,-0.555189176780273]];
        var forward_template = [[0.3614994289168437,-0.11562319945595666,0.9251753556166332],[0.3614994289168437,-0.11562319945595667,0.9251753556166332],[0.2814234180777454,-0.9429100071343607,0.17810552547104933],[0.2814234180777453,-0.9429100071343605,0.17810552547105005],[-0.15386594166140874,-0.3476691648605602,-0.9249061702690757],[-0.06141576353081328,-0.23546910624637368,-0.9699393816076659],[0.04114212551286626,-0.026009851479544415,-0.9988147041039671],[0.10537358100600606,0.050471769857990983,-0.9931510503812462],[0.08586126358079184,0.1011566033829671,-0.9911585065005147],[0.03406161036459144,0.14629051518876762,-0.988655092469146],[0.03495877668723525,0.19585002978350458,-0.9800105355384361],[0.14922792943562754,0.22886835250498697,-0.9619512993379697],[0.12213904378645896,0.2916397200107564,-0.9486982279391993],[0.17506757483576765,0.3359315034414438,-0.9254735918634817],[0.18163013249975427,0.3996962051950704,-0.8984728368296852],[0.22522131944500715,0.4961125783815316,-0.8385390073449647],[0.47195313699814867,0.582139774920166,-0.6620978167412314],[0.5378090913653463,0.6090246428179815,-0.5829668649976691],[0.5182803139617844,0.5759775873588723,-0.6321671733172538],[0.4644747011462685,0.579074797051797,-0.6700265900802034],[0.38297053694139316,0.538844981890307,-0.7503197007452596],[0.13689551115942117,0.5429775200760261,-0.8285137486586989],[-0.6062494415607816,0.6289640729702333,-0.48668861659169255],[-0.9430359374748509,0.22682648983475875,0.24337823267533856],[-0.7887203537001886,0.03039044917299406,0.6140005083533019],[-0.6980813489244365,-0.03424581601947127,0.7151990312975819],[-0.7526604820445638,0.025811536821635943,0.6579027005077195],[-0.8037379926475021,0.3561985971476775,0.47657926787155824],[-0.5441356553664479,0.8034634677624714,0.24158403202618764],[-0.21445724990059006,0.9638392167129852,0.15818360310466678],[0.24988734441827914,0.7901979827570986,0.559592229347578],[0.33916907920357575,0.5805918478210471,0.7401874370427673]];
        var backward_template = [[0.8019088147509726,0.2580456701626595,-0.5388456967769106],[0.7636204348737974,0.14235134605659067,-0.6297776795973554],[0.4744608412758748,-0.2470619360300003,-0.844894851363705],[0.0825917746435451,-0.587418137312219,-0.8050580915175456],[-0.2072055620151687,-0.846791852259508,-0.48990755660317137],[-0.4545247720749976,-0.8882466077614747,-0.0665221419559255],[-0.43380558382950396,-0.8901971446947959,0.13914653792163045],[-0.43351876314235505,-0.8889165488590427,0.14794881266185303],[-0.4737121243982762,-0.8706981862769402,0.13221759191619928],[-0.5465317635131263,-0.7947065385332206,0.2640919330153403],[-0.52249502782717,-0.7919693345222668,0.3158852941690111],[-0.5213502066514342,-0.761203466992028,0.385698384575076],[-0.2828206024272194,-0.7833471046152962,0.5535158719797806],[-0.09564667412627587,-0.6229030564946518,0.776429968469921],[-0.20489812124608212,-0.4773793226657421,0.8544739564205706],[-0.23479542130375256,-0.4010597058113059,0.885450293641231],[-0.28298931340964617,-0.20169268637203172,0.9376764414018145],[-0.308949742847334,-0.062427305508880156,0.9490273378156538],[-0.3090282656379004,0.38866666890666196,0.8680090734075483],[-0.3090282656379004,0.3886666689066619,0.8680090734075482],[-0.30902826563790037,0.38866666890666196,0.8680090734075482],[0.36543100149024743,0.9016542463550141,0.23125700676910615],[0.5802789347421251,0.814389432782201,0.006797769283348187],[0.6982816486932206,0.46929096904255835,-0.5405263411466402],[0.5353021708358617,0.05896780173885933,-0.8425997770332606],[0.3907104036508008,-0.10147190539585707,-0.9149037287574919],[0.32656871805121,-0.06129036626932313,-0.9431841619710126],[0.3451131631101148,-0.0006229747354366177,-0.9385608752503006],[0.288889188139446,0.008126835365584024,-0.957328048018584],[0.25174687493677894,0.07232093384829405,-0.965087142949732],[0.5326147727738333,0.22850681831983874,-0.8149270751450232],[0.6249462248145862,0.5669865285793944,-0.5366269584166307],[0.807553963277094,0.19437269452803438,0.5568445492391656]];
        var up_template = [[0.3931954656332231,-0.6894349094426494,-0.6083394048122139],[0.4421543443366109,-0.8203402357343829,-0.36268641195875956],[0.3015707785184035,-0.9413774082642385,0.15120727744890203],[0.2616387577142776,-0.9591120543407331,0.10793158796213433],[0.2913952789933124,-0.9158201732607844,0.276337115909167],[0.2913952789933126,-0.9158201732607844,0.27633711590916693],[0.41122908851622636,-0.7580156330902431,0.5062637027764402],[0.45744602928895145,-0.841720000256749,0.2867936042793671],[0.42436185743193716,-0.9009856693809205,0.09023213134538498],[0.3288347995369369,-0.9409570732127893,-0.08042052588937748],[0.2974460304623019,-0.9526419763239945,-0.06323862670657082],[0.19078539845979275,-0.8784843326719075,0.43802535198836545],[0.13683398345831746,-0.7916417556448282,0.595466028997879],[0.19507615628653932,-0.73413850579283,0.6503736983925015],[0.311796363800432,-0.7116421709557034,0.6295621081658919],[0.7239315672979126,-0.310841013853032,0.6158741348493272],[0.904534074386287,0.08576135962252864,0.4176877990435421],[0.7872099057644818,0.5407399980548087,0.296480722425525],[0.7272032213367952,0.5934877507711737,0.3448880464179087],[0.6102149730657696,0.7329061964231376,-0.3008092317248776],[0.3345047838450289,0.5682310854629098,-0.7518111352583396],[0.03829506962732256,0.48829712220081406,-0.8718368012951976],[-0.5096789930217579,0.19024102899255158,-0.8390683374792436],[-0.638285620371274,-0.08228352620950699,-0.7653893702827256],[-0.576352521716996,-0.15462602972791853,-0.802439132670535],[-0.6894195816489029,0.057836552295011494,-0.7220495645436524],[-0.6078932945112059,0.06610525457967889,-0.7912621801939406],[-0.4393909490615608,0.034499867440032396,-0.8976331951467711],[-0.4011899454284438,0.22571552018396782,-0.8877494757166591]];
        var down_template = [[0.5016632143414363,-0.35683171276110914,0.7880387986289705],[0.5143110183323178,-0.4525432829004476,0.7284838732076777],[0.4143121426536822,-0.6396146313944675,0.6474863487022985],[0.20060543839287479,-0.7647999781589362,0.6122405176850788],[0.020712307965896414,-0.8553224045316917,0.517681933821194],[-0.05548153361697582,-0.9723095611164896,0.22701523470676513],[-0.8318886879388758,-0.2598046663283034,-0.4903700095166656],[-0.6626649031583332,0.29937332173273157,-0.6864771229668671],[-0.5644889275061177,0.6350628708747854,-0.5273020014747419],[-0.5597059622425012,0.7212159520432299,-0.40813819516013605],[-0.5213870676090696,0.7530338440014036,-0.4013671081671804],[-0.42951505541001667,0.7774736754765836,-0.45940341870415163],[-0.40151036435307697,0.8143840276626778,-0.41900845194933034],[-0.4765613749379,0.8126373356246014,-0.33542483012777563],[-0.442015621354421,0.8674535436749564,-0.22835616927165667],[-0.35522910525971574,0.9095530134937787,-0.2156979332788516],[-0.24149187228049018,0.932912167689308,-0.2671264925081376],[-0.2814136842971468,0.9529088133601962,-0.11300943195489568],[-0.3499127236889651,0.9364910574891185,0.023357761953630856],[-0.3196980513469772,0.9344492116822967,0.1568369431966841],[-0.19871721927702266,0.9393180414835183,0.2796302625009947],[-0.3238790741390571,0.7039138125677367,0.6321453075133757],[-0.5077755168575743,0.5927137477374171,0.6251835232338492],[-0.4620929308115145,0.6752361276011358,0.5749141633985437],[-0.3400262240487626,0.7515170086612928,0.5653356106348892],[-0.134022931818962,0.7196642992563833,0.6812643760849885],[-0.022262150732644963,0.6876660061232391,0.7256857864580719],[-0.31590575259962556,0.692012963773135,0.6490929158790641]];

        // initialize raw mode
        $scope.collection_features = [];
        $scope.collection_feature_magnitudes = [];
        $scope.analysis_index = 0;
        $scope.unrecognized_count = 10;
        $scope.time = 0;
        //state value
        $scope.recognition_state = "non";
        $scope.pre_gesturestate = "non";
        //session
        $scope.session_num = 0;
        $scope.session_image = "img/cruise.png";
        // progress
        $scope.progress_value = 100;
        var music_length = 254;
        // gesture recognition
        $scope.gesture_recog = true;
        // style
        $scope.symbol={width:'120px'};
        // description
        $scope.description_first = "세월호를 배가 물위를 떠다니는 모습을 형상화,";
        $scope.description_second = "핸드폰을 손에 들고 좌우로 움직이는 제스처입니다.";
        // gesture cut out
        $scope.description = true;

        // set one and two template with a initial gesture
        var one_template = left_template;
        var two_template = right_template;
        var frame_size = Math.min(one_template.length, two_template.length);
        console.log('A Length of the first and second template  : ' + one_template.length + ', ' + two_template.length);

        // start collecting
        // 12초 - 70초까지 Session 1, 88초 - 136초 Session 2, 156초 - 210초 Session 3, 210초 - 270 듣기
        var tick = 0;
        var gravity = [0, 0, 0];
        var vibration_info = [400, 660, 900, 1160, 1420, 1680, 1920, 2180, 2440, 3200, 3460, 3720, 3980, 4240, 4480, 4740, 4980, 5240, 6020, 6260, 6520, 6780, 7040, 7280, 7540, 7800];

        $scope.stop = $interval(function() {
            tick = tick + 1;
            if(tick % 20 === 0) {
                var index = vibration_info.indexOf(tick);
                if(index !== -1 && $scope.vibration) {
                    $cordovaVibration.vibrate(3000);
                    $scope.vibration = false;
                }
            }

            if (tick % 40 === 0) {
                // increase timer
                $scope.time = $scope.time + 1;
                $scope.progress_value = ($scope.time * 100) / music_length;

                // increase unrecognized_count
                if ($scope.time > 7 && $scope.time < 210) {
                    if ($scope.recognition_state === "non") {
                     $scope.unrecognized_count = $scope.unrecognized_count + 1;
                    } else {
                        $scope.unrecognized_count = 0;
                        $scope.recognition_state = "non";
                    }
                }

                // volume control
                if ($scope.unrecognized_count > 6 && $scope.session_num !== 3) $cordovaNativeAudio.setVolumeForComplexAsset('music', 0.1);
                else if($scope.time > 7) $cordovaNativeAudio.setVolumeForComplexAsset('music', 1.0);

                // change session
                if ($scope.time > 70 && $scope.session_num === 0) { // 2번째 session
                    // change session num
                    $scope.session_num = 1;
                    $scope.session_image = "img/hug.png";
                    // change description
                    $scope.description_first = "세월호 희생자들을 안아주는 것을 형상화,";
                    $scope.description_second = "핸드폰을 가슴 위에 대고 앞뒤로 움직이는 제스처입니다.";
                    // change template
                    one_template = forward_template;
                    two_template = backward_template;
                    frame_size = Math.min(one_template.length, two_template.length);
                    console.log('A Length of the first and second template  : ' + one_template.length + ', ' + two_template.length);
                } else if ($scope.time > 130 && $scope.session_num === 1) {
                    // change session num
                    $scope.session_num = 2;
                    $scope.session_image = "img/fist.png";
                    // change description
                    $scope.description_first = "세월호 참사를 함께 기억하는 것을 형상화.";
                    $scope.description_second = "핸드폰을 손을 내밀듯이 앞 뒤로 움직이는 제스처입니다.";
                    // change template
                    one_template = up_template;
                    two_template = down_template;
                    frame_size = Math.min(one_template.length, two_template.length);
                    console.log('A Length of the first and second template  : ' + one_template.length + ', ' + two_template.length);
                } else if ($scope.time > 198 && $scope.session_num === 2) {
                    $scope.gestureSession = false;
                    // change session num
                    $scope.session_num = 3;
                    $scope.symbol = {width:'200px'};
                    $scope.session_image = "img/ribbon.png";
                    $scope.description = false;
                    // stop gesture
                    $scope.gesture_recog = false;
                    $cordovaNativeAudio.stop('beat');
                    $cordovaNativeAudio.setVolumeForComplexAsset('music', 1.0);
                } else if ($scope.time > 250) {
                    // stop music
                    $scope.stopMusic();
                }

            }

            if($scope.gesture_recog){
                // get accelerometer data
                $cordovaDeviceMotion.getCurrentAcceleration().then(function (result) {

                    $scope.analysis_index++;

                    // calculate similarity
                    if ($scope.collection_features.length > frame_size) {
                        $scope.collection_features.shift();
                        $scope.collection_feature_magnitudes.shift();

                        // calculate average magnitude
                        var sum = 0;
                        for (var i = $scope.collection_feature_magnitudes.length - 5; i < $scope.collection_feature_magnitudes.length; i++)
                            sum += $scope.collection_feature_magnitudes[i];
                        $scope.avg_magnitude = sum / $scope.collection_feature_magnitudes.length;

                        if ($scope.analysis_index % 2 == 0 && $scope.avg_magnitude > 0.2) {

                            // get similarity
                            if ($scope.pre_gesturestate !== 'One') {
                                // Right or None
                                var left_distance = $analyzer.getSimilarity(one_template, $scope.collection_features);
                                if (left_distance < 17.5) {
                                    console.log('One Gesture ' + tick);
                                    $scope.recognition_state = "One";
                                    $scope.pre_gesturestate = "One";
                                    $scope.socket.emit('Gesture', {name: my_name, timestamp: new Date().getTime()});
                                }
                            } else if ($scope.pre_gesturestate !== 'Two') {
                                var right_distance = $analyzer.getSimilarity(two_template, $scope.collection_features);
                                if (right_distance < 17.5) {
                                    console.log('Two Gesture ' + tick);
                                    $scope.recognition_state = "Two";
                                    $scope.pre_gesturestate = "Two";
                                    $scope.socket.emit('Gesture', {name: my_name, timestamp: new Date().getTime()});
                                }
                            }
                        }
                    }

                    // remove gravity
                    var alpha = 0.8;
                    gravity[0] = alpha * gravity[0] + (1 - alpha) * result.x;
                    gravity[1] = alpha * gravity[1] + (1 - alpha) * result.y;
                    gravity[2] = alpha * gravity[2] + (1 - alpha) * result.z;

                    // normalize and make collection_features
                    var frame_feature = [];
                    var magnitude = Math.sqrt((result.x - gravity[0]) * (result.x - gravity[0]) + (result.y - gravity[1]) * (result.y - gravity[1]) + (result.z - gravity[2]) * (result.z - gravity[2]));
                    frame_feature.push((result.x - gravity[0]) / magnitude);
                    frame_feature.push((result.y - gravity[1]) / magnitude);
                    frame_feature.push((result.z - gravity[2]) / magnitude);
                    $scope.collection_features.push(frame_feature);
                    $scope.collection_feature_magnitudes.push(magnitude);

                }, function (err) {
                });
            }

        }, 25);
    };

    $scope.stopMusic = function() {
        if($scope.stop !== null) {
            $interval.cancel($scope.stop);
            $scope.stop = null;
        }
        $cordovaNativeAudio.stop('music');
        $cordovaNativeAudio.stop('beat');
    };

    // [Game] Stop
    $scope.stopGame = function() {
        $scope.stopMusic();
        console.log($scope.comments);
        $localstorage.setComments($scope.comments);
        $scope.socket.emit('Comments',{'index': $localstorage.getIndex(), 'comment' : $scope.comments});
        $state.go('comments');
    }

})

.controller('commentsCtrl', function($scope, $ionicHistory, $state, $socket) {
    /* 진행상황 확인 페이지 */
    console.log('Start: Comments Ctrl');

    $scope.comments = "받기 전";
    $scope.socket = $socket.getSocket();

    $scope.socket.emit('GetComments');

    $scope.socket.on('PushComments',function(data){
        console.log('PushComments: Successfully get Comments' + data);
        $scope.comments = data;
    });

    $scope.goNext = function() {
        $ionicHistory.clearHistory();
        $ionicHistory.clearCache();
        $state.go('overall');
    }
})

.controller('adminCtrl', function($scope, $mdDialog, $localstorage, $state){
    /* 제스처에 대한 설명을 하고 각 제스처를 트레이닝 할 수 있는 화면 */
    console.log('Start: Gesture Ctrl');

    $scope.checkbox_data = {ship: false, hug: false, fist: false};

    // initialize checkbox
    var left = $localstorage.getTemplate('Left');
    var right = $localstorage.getTemplate('Right');
    var forward = $localstorage.getTemplate('Forward');
    var backward = $localstorage.getTemplate('Backward');
    var up = $localstorage.getTemplate('Up');
    var down = $localstorage.getTemplate('Down');

    if(!isEmpty(left) && !isEmpty(right)) {
        console.log('Ship gesture has trained already');
        $scope.checkbox_data['ship'] = true;
    }
    if(!isEmpty(forward) && !isEmpty(backward)) {
        console.log('Hug gesture has trained already');
        $scope.checkbox_data['hug'] = true;
    }
    if(!isEmpty(up) && !isEmpty(down)) {
        console.log('Fist gesture has trained already');
        $scope.checkbox_data['fist'] = true;
    }
    function isEmpty(obj) {
      return Object.keys(obj).length === 0;
    }

    // show dialog
    $scope.showTrainDialog = function(gesture) {
        console.log('Function: showTrainDialog for ' + gesture);

        // gesture_가 붙은 것은 gesture template
        $scope.gesture_name = gesture;

        $mdDialog.show({
          controller: trainController,
          templateUrl: 'templates/_admin_train.html',
          parent: angular.element(document.body),
          clickOutsideToClose:true,
          scope: $scope,
          preserveScope: true
        })
        .then(function(answer) {
          console.log(answer);
        }, function() {
          console.log('cancelled');
        });

    };

    function trainController($scope, $mdDialog, $interval, $cordovaDeviceMotion, $analyzer, $cordovaNativeAudio, $localstorage) {
        /* 제스처를 트레이닝하는 다이얼로그 */
        console.log('Start: Train Controller');

        // setting information
        var train_information = {
            ship: {train_title: '배모양', train_image_path: 'img/cruise.png', train_subone_title: '왼방향', train_subtwo_title: '오른방향', train_subone_name: 'Left', train_subtwo_name: 'Right'},
            hug: {train_title: '포옹', train_image_path: 'img/hug.png', train_subone_title: '앞방향', train_subtwo_title: '뒷방향', train_subone_name: 'Forward', train_subtwo_name: 'Backward'},
            fist: {train_title: '다짐', train_image_path: 'img/fist.png', train_subone_title: '윗방향', train_subtwo_title: '아랫방향', train_subone_name: 'Up', train_subtwo_name: 'Down'}
        };
        $scope.train_data = train_information[$scope.gesture_name];

        // guide messages
        var train_guide = {ready: "제스처 등록을 시작해주세요.", waiting: "움직이 없이 기다려주세요.", starting: "제스처를 시작해주세요.", collecting: "수집중 입니다.", finished: "수집이 완료되었습니다."};
        $scope.train_guide_message = train_guide['ready'];

        // training functions
        var stop = undefined;

        // temporary storage
        $scope.subgesture_one_template = [];
        $scope.subgesture_two_template = [];

        $scope.train_start = function(index) {
            // collect data for a subGesture
            console.log('Function: train_start');

            // to prevent from calling multiple function at once.
            $scope.train_stop();

            // set message
            $scope.train_guide_message = train_guide['waiting'];

            // Data set
            var recorded_data = [
                [], // For_X
                [], // For_Y
                [] // For_Z
            ];
            var magnitude_array = [];

            // Status Variables
            var isRecording = false;
            var isStable = false;

            // start collection...
            var gravity = [0, 0, 0];
            stop = $interval(function() {
              // get accelerometer data
              $cordovaDeviceMotion.getCurrentAcceleration().then(function(result) {

                  // remove gravity
                  var alpha = 0.8;

                  gravity[0] = alpha * gravity[0] + (1 - alpha) * result.x;
                  gravity[1] = alpha * gravity[1] + (1 - alpha) * result.y;
                  gravity[2] = alpha * gravity[2] + (1 - alpha) * result.z;

                  var x = result.x - gravity[0];
                  var y = result.y - gravity[1];
                  var z = result.z - gravity[2];
                  var magnitude = Math.sqrt(x * x + y * y + z * z);

                  // add magnitude value to magnitude array
                  magnitude_array.push(magnitude);

                  var avg = 10000;  // Quite Large AVG
                  if(magnitude_array.length > 5) { // 5는 magnitude average 의 크기
                    var sum = 0;
                    for(var i = 0; i < magnitude_array.length; i++)
                        sum += magnitude_array[i];
                    avg = sum / magnitude_array.length;
                    magnitude_array.shift();
                  }

                  if(isRecording === false && isStable === false) { // before stable
                    if(avg < 0.5) { // stable
                        isStable = true;
                        $scope.train_guide_message = train_guide['starting'];
                    }
                  } else if(isRecording === false && isStable === true) { // After stable
                    if(avg > 1.5) { // moving
                        isRecording = true;
                        $scope.train_guide_message = train_guide['collecting'];
                    }
                  } else if(isRecording === true && isStable === true) {  // During Recording
                    if(avg < 1 && recorded_data[0].length > 10) {
                        $scope.train_stop();
                        $scope.train_guide_message = train_guide['finished'];
                        var template = [];
                        for(var j = 0; j < recorded_data[0].length; j++) {
                                var feature = [];
                                var mag = Math.sqrt(recorded_data[0][j] * recorded_data[0][j] + recorded_data[1][j] * recorded_data[1][j] + recorded_data[2][j] * recorded_data[2][j]);
                                feature.push(recorded_data[0][j] / mag); // x
                                feature.push(recorded_data[1][j] / mag); // y
                                feature.push(recorded_data[2][j] / mag); // z
                                template.push(feature);
                        }
                        if(index === 0)
                            $scope.subgesture_one_template = template;
                        else
                            $scope.subgesture_two_template = template;
                    } else {
                        recorded_data[0].push(x);
                        recorded_data[1].push(y);
                        recorded_data[2].push(z);
                    }
                  }
              }, function(err) {
                // An error occurred. Show a message to the user
              });
            }, 25);
        };

        $scope.train_stop = function() {
            // stop collection
            console.log('Function: train_stop');
            if (angular.isDefined(stop)) {
              $interval.cancel(stop);
              stop = undefined;
            }
        };

        // testing functions
        $scope.train_test_start = function() {
            if ( angular.isDefined(stop) ) return;

            // start test
            if($scope.subgesture_one_template !== [] && $scope.subgesture_two_template !== []) {
                console.log('Function: train_test_start' + $scope.train_data['train_title']);
            } else {
                alert('트레이닝이 완료된 후에 테스트를 할 수 있습니다.');
                return;
            }

            // initialize raw mode
            $scope.collection_features = [];
            $scope.collection_feature_magnitudes = [];
            $scope.analysis_index = 0;

            $scope.current_state = "Non";

            // get templates from local storage
            var left_template = $scope.subgesture_one_template;
            var right_template = $scope.subgesture_two_template;
            if(left_template.length === 0)
                left_template = $localstorage.getTemplate($scope.train_data['train_subone_name'])['subgesture'];
            if(right_template.length === 0)
                right_template = $localstorage.getTemplate($scope.train_data['train_subtwo_name'])['subgesture'];
            var frame_size = Math.min(left_template.length, right_template.length); // 이거 어떻게 정해야하는지 고민되는 구만
            console.log('A Length of a first template : ' + left_template.length);
            console.log(left_template);
            console.log('A Length of a second template : : ' + right_template.length);
            console.log(right_template);

            $scope.left_distance = 0;
            $scope.right_distance = 0;

            // start collecting
            var gravity = [0, 0, 0];
            stop = $interval(function() {
              // get accelerometer data
              $cordovaDeviceMotion.getCurrentAcceleration().then(function(result) {

                  $scope.analysis_index++;

                  // calculate similarity
                  if($scope.collection_features.length > frame_size) {
                     $scope.collection_features.shift();
                     $scope.collection_feature_magnitudes.shift();

                     // calculate average magnitude
                     var sum = 0;
                     for(var i = $scope.collection_feature_magnitudes.length - 5; i < $scope.collection_feature_magnitudes.length; i++)
                        sum += $scope.collection_feature_magnitudes[i];
                     $scope.avg_magnitude = sum / $scope.collection_feature_magnitudes.length;

                     if($scope.analysis_index % 2 == 0 && $scope.avg_magnitude > 0.2) {
                         // 현재 Left 인지 Right 인지로 구분해서 하면 되겠구나
                         if($scope.current_state !== 'Left') {
                            // Right or None
                            var left_distance = $analyzer.getSimilarity(left_template, $scope.collection_features);
                            if(left_distance < 15) {
                                console.log('Left Gesture');
                                $scope.current_state = 'Left';
                                $scope.guide_message = 'Left';
                                $scope.left_distance = left_distance;
                                // 소리 Play
                                $cordovaNativeAudio.play('effect_one');
                            }
                         } else if($scope.current_state !== 'Right') {
                            var right_distance = $analyzer.getSimilarity(right_template, $scope.collection_features);
                            if(right_distance < 15) {
                                console.log('Right Gesture');
                                $scope.current_state = 'Right';
                                $scope.guide_message = 'Right';
                                $scope.right_distance = right_distance;
                                // 소리 Play
                                $cordovaNativeAudio.play('effect_two');
                            }
                         }
                     }
                  }

                  // remove gravity
                  var alpha = 0.8;
                  gravity[0] = alpha * gravity[0] + (1 - alpha) * result.x;
                  gravity[1] = alpha * gravity[1] + (1 - alpha) * result.y;
                  gravity[2] = alpha * gravity[2] + (1 - alpha) * result.z;

                  // normalize and make collection_features
                  var frame_feature = [];
                  var magnitude = Math.sqrt((result.x - gravity[0]) * (result.x - gravity[0]) + (result.y - gravity[1]) * (result.y - gravity[1]) + (result.z - gravity[2]) * (result.z - gravity[2]));
                  frame_feature.push((result.x - gravity[0]) / magnitude);
                  frame_feature.push((result.y - gravity[1]) / magnitude);
                  frame_feature.push((result.z - gravity[2]) / magnitude);
                  $scope.collection_features.push(frame_feature);
                  $scope.collection_feature_magnitudes.push(magnitude);

              }, function(err) {
                // An error occurred. Show a message to the user

              });
            }, 25);
        };

        // dialog functions
        $scope.answer = function(answer) {
            if(answer === 'complete') {
                $localstorage.setTemplate( $scope.train_data['train_subone_name'], {subgesture:$scope.subgesture_one_template});
                $localstorage.setTemplate( $scope.train_data['train_subtwo_name'], {subgesture:$scope.subgesture_two_template});
            }
            $mdDialog.hide(answer);
            $scope.checkbox_data[$scope.gesture_name] = true;
        };

    }

    $scope.ImReady = function() {
        console.log('Function: ImReady');
        $state.go('game');

    };
});






